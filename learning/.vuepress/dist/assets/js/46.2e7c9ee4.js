(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{1058:function(t,s,n){"use strict";n.r(s);var a=n(3),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_01、题目分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_01、题目分析"}},[t._v("#")]),t._v(" 01、题目分析")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("第1题：两数之和")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。")])])])]),t._v(" "),a("p",[t._v("你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。")]),t._v(" "),a("p",[a("strong",[t._v("示例:")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("给定 nums = [2, 7, 11, 15], target = 9\n因为 nums[0] + nums[1] = 2 + 7 = 9\n所以返回 [0, 1]\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("br"),t._v(" "),a("blockquote",[a("p",[t._v("题目分析")])]),t._v(" "),a("p",[t._v("首先我们拿到题目一看，马上可以想到"),a("strong",[t._v("暴力题解")]),t._v("。我们只需要 “"),a("strong",[t._v("遍历每个元素 x，并查找是否存在一个值与 target - x 相等的目标元素。")]),t._v("”"),a("br"),t._v(" "),a("br"),t._v("\n由于该种解题思路过于简单，直接上代码（如果有问题请留言..）：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("func twoSum(nums []int, target int) []int {\n\tfor i, v := range nums {\n\t\tfor k := i + 1; k < len(nums); k++ {\n\t\t\tif target-v == nums[k] {\n\t\t\t\treturn []int{i, k}\n\t\t\t}\n\t\t}\n\t}\n\treturn []int{}\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("执行结果：")]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:n(498),alt:"PNG"}}),t._v(" "),a("blockquote",[a("p",[t._v("运行成功，但是该种解题方式的时间复杂度过高，达到了O(n²)。为了对运行时间复杂度进行优化，我们需要一种更有效的方法来检查数组中是否存在目标元素。我们可以想到用"),a("strong",[t._v("哈希表")]),t._v("的方式，通过以空间换取时间的方式来进行。")])]),t._v(" "),a("h2",{attrs:{id:"_02、题目图解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_02、题目图解"}},[t._v("#")]),t._v(" 02、题目图解")]),t._v(" "),a("p",[t._v("假设 nums = [2, 7, 11, 15], target = 9")]),t._v(" "),a("br"),t._v(" "),a("p",[t._v("<1> 首先，我们还是先遍历数组 nums，i 为当前下标。我们需要将每一个遍历的值放入 map 中作为 key。")]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:n(499),alt:"PNG"}}),t._v(" "),a("p",[t._v("<2> 同时，对每个值都判断 map 中是否存在 "),a("strong",[t._v("target-nums[i]")]),t._v(" 的 key 值。在这里就是 9-7=2。我们可以看到 2 在 map 中已经存在。")]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:n(500),alt:"PNG"}}),t._v(" "),a("p",[t._v("<3> 所以，2 和 7 所在的 key 对应的 value，也就是 [0,1]。就是我们要找的两个数组下标。")]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:n(501),alt:"PNG"}}),t._v(" "),a("h2",{attrs:{id:"_03、go语言示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_03、go语言示例"}},[t._v("#")]),t._v(" 03、Go语言示例")]),t._v(" "),a("p",[t._v("根据以上分析，我们可以得到下面的题解：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("func twoSum(nums []int, target int) []int {\n    result := []int{}\n    m := make(map[int]int)\n    for i,k := range nums {      \n        if value,exist := m[target-k];exist {\n            result = append(result,value)\n            result = append(result,i)\n        }\n        m[k] = i\n    }\n    return result\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[t._v("执行结果：")]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:n(502),alt:"PNG"}})])}),[],!1,null,null,null);s.default=e.exports},498:function(t,s,n){t.exports=n.p+"assets/img/1.be7ce0b0.jpg"},499:function(t,s,n){t.exports=n.p+"assets/img/2.6c7de304.jpeg"},500:function(t,s,n){t.exports=n.p+"assets/img/3.5e716077.jpg"},501:function(t,s,n){t.exports=n.p+"assets/img/4.3a449284.jpg"},502:function(t,s,n){t.exports=n.p+"assets/img/5.e45f10c1.jpg"}}]);